package application;

/* -LICENSE-START-
** Copyright (c) 2009 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
** 
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
** 
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/
public class REFIID {
	private byte byte0;
	private byte byte1;
	private byte byte2;
	private byte byte3;
	private byte byte4;
	private byte byte5;
	private byte byte6;
	private byte byte7;
	private byte byte8;
	private byte byte9;
	private byte byte10;
	private byte byte11;
	private byte byte12;
	private byte byte13;
	private byte byte14;
	private byte byte15;
	
	public REFIID(byte byte0, byte byte1, byte byte2, byte byte3, byte byte4, byte byte5, byte byte6, byte byte7, byte byte8, byte byte9, byte byte10, byte byte11, byte byte12, byte byte13, byte byte14, byte byte15) {
		setByte0(byte0);
		setByte1(byte1);
		setByte2(byte2);
		setByte3(byte3);
		setByte4(byte4);
		setByte5(byte5);
		setByte6(byte6);
		setByte7(byte7);
		setByte8(byte8);
		setByte9(byte9);
		setByte10(byte10);
		setByte11(byte11);
		setByte12(byte12);
		setByte13(byte13);
		setByte14(byte14);
		setByte15(byte15);
	}
	public REFIID() {
	}
	
	public byte getByte0() {
		return byte0;
	}
	public void setByte0(byte newByte0) {
		byte0 = newByte0;
	}
	public byte getByte1() {
		return byte1;
	}
	public void setByte1(byte newByte1) {
		byte1 = newByte1;
	}
	public byte getByte2() {
		return byte2;
	}
	public void setByte2(byte newByte2) {
		byte2 = newByte2;
	}
	public byte getByte3() {
		return byte3;
	}
	public void setByte3(byte newByte3) {
		byte3 = newByte3;
	}
	public byte getByte4() {
		return byte4;
	}
	public void setByte4(byte newByte4) {
		byte4 = newByte4;
	}
	public byte getByte5() {
		return byte5;
	}
	public void setByte5(byte newByte5) {
		byte5 = newByte5;
	}
	public byte getByte6() {
		return byte6;
	}
	public void setByte6(byte newByte6) {
		byte6 = newByte6;
	}
	public byte getByte7() {
		return byte7;
	}
	public void setByte7(byte newByte7) {
		byte7 = newByte7;
	}
	public byte getByte8() {
		return byte8;
	}
	public void setByte8(byte newByte8) {
		byte8 = newByte8;
	}
	public byte getByte9() {
		return byte9;
	}
	public void setByte9(byte newByte9) {
		byte9 = newByte9;
	}
	public byte getByte10() {
		return byte10;
	}
	public void setByte10(byte newByte10) {
		byte10 = newByte10;
	}
	public byte getByte11() {
		return byte11;
	}
	public void setByte11(byte newByte11) {
		byte11 = newByte11;
	}
	public byte getByte12() {
		return byte12;
	}
	public void setByte12(byte newByte12) {
		byte12 = newByte12;
	}
	public byte getByte13() {
		return byte13;
	}
	public void setByte13(byte newByte13) {
		byte13 = newByte13;
	}
	public byte getByte14() {
		return byte14;
	}
	public void setByte14(byte newByte14) {
		byte14 = newByte14;
	}
	public byte getByte15() {
		return byte15;
	}
	public void setByte15(byte newByte15) {
		byte15 = newByte15;
	}
}
